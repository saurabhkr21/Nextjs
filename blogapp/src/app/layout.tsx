"use client";
import Header from "@/components/Header";
import DialogContextProvider from "@/contexts/DialogContextProvider";
import gqlClient from "@/services/gql";
import { Theme } from "@radix-ui/themes";
import { gql } from "graphql-request";
import { Geist, Geist_Mono } from "next/font/google";
import { createContext, useEffect, useState } from "react";
import { user } from "../../generated/prisma";
import "./globals.css";

const CURRENT_USER = gql`
  query CurrentUser {
    currentUser {
      id
      name
      email
      createdAt
    }
  }
`;

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

type userContextType = {
  user: user | null;
  setUser: (user: user | null) => void;
};
export const UserContext = createContext<userContextType | undefined>({
  user: null,
  setUser: () => {},
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Blog Exploring",
//   description: "Generated by Saurabh Kumar",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [user, setUser] = useState<user | null>(null);
  useEffect(() => {
    async function fetchUserdata() {
      try {
        const data: { currentUser: user } = await gqlClient.request(
          CURRENT_USER
        );
        if (data && data.currentUser) {
          setUser(data.currentUser);
        } else {
          setUser(null);
        }
      } catch (err) {
        console.error("Error fetching user data:", err);
        setUser(null);
      }
    }
    fetchUserdata();
  }, []);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Theme appearance="dark">
          <UserContext.Provider value={{ user, setUser }}>
            <DialogContextProvider>
              <Header />
              {children}
            </DialogContextProvider>
          </UserContext.Provider>
        </Theme>
      </body>
    </html>
  );
}
